<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Samples on SpiderSoft</title><link>https://www.spidersoft.com.au/tags/samples/</link><description>Recent content in Samples on SpiderSoft</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 21 Aug 2014 04:30:27 +0000</lastBuildDate><atom:link href="https://www.spidersoft.com.au/tags/samples/index.xml" rel="self" type="application/rss+xml"/><item><title>PHP, work queues</title><link>https://www.spidersoft.com.au/2014/php-work-queues/</link><pubDate>Thu, 21 Aug 2014 04:30:27 +0000</pubDate><guid>https://www.spidersoft.com.au/2014/php-work-queues/</guid><description>&lt;p&gt;Biggest pain point in PHP is lack of asynchronous calls. The only reasonable way is to use some kind of “backend” processing and task list to execute. Some people use cron to run given script each n-minutes and execute tasks. But there is a little bit more “professional” approach.  
 
 
 
 
 &lt;a href="http://kr.github.io/beanstalkd/"&gt;Beanstalk&lt;/a&gt;
 is a simple, fast work queue. Idea is pretty simple – you can just throw tasks into queue and then have background worker which is pulling data from pipe and executes task.&lt;/p&gt;
&lt;p&gt;Couple ideas: sending emails, processing images, making heavy queries into database. But the best part of it – you don’t have to use PHP for back processing. It could be anything, because protocol us universal and worker and client doesn’t have to be in the same language. So you can schedule task in PHP, and run it in Go. I’m not going too much into details. Just run some examples.&lt;/p&gt;</description></item></channel></rss>