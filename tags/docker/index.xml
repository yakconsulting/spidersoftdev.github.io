<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on SpiderSoft</title><link>https://www.spidersoft.com.au/tags/docker/</link><description>Recent content in Docker on SpiderSoft</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 04 Aug 2023 10:06:56 +0000</lastBuildDate><atom:link href="https://www.spidersoft.com.au/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>How to quickly create a docker image with MySQL and import sql file</title><link>https://www.spidersoft.com.au/2023/docker-mysql-import-file/</link><pubDate>Fri, 04 Aug 2023 10:06:56 +0000</pubDate><guid>https://www.spidersoft.com.au/2023/docker-mysql-import-file/</guid><description>&lt;p&gt;I need quick and easy way to restore some of my MySQL databases from sql files. I don&amp;rsquo;t want to install MySQL on my machine, so I decided to use Docker. I created a simple bash script that will do all the work for me.&lt;/p&gt;</description></item><item><title>How to scrape page source with Go and chromedp</title><link>https://www.spidersoft.com.au/2023/scraping-pages-with-go-and-chromedp/</link><pubDate>Mon, 13 Feb 2023 08:00:00 +0000</pubDate><guid>https://www.spidersoft.com.au/2023/scraping-pages-with-go-and-chromedp/</guid><description>&lt;p&gt;It&amp;rsquo;s clear what we are trying to achieve, so let&amp;rsquo;s consider the requirements. Firstly, we need a tool to render web pages since JavaScript is commonly used nowadays. Secondly, we require an API to communicate with the headless browser. Lastly, saving the result can be challenging as browsers are designed to interact with rendered results rather than directly with the source code.&lt;/p&gt;
&lt;h2 id="headless-browser"&gt;Headless browser&lt;/h2&gt;
&lt;p&gt;So we are looking for a headless browser. We are going to use 
 
 
 
 
 &lt;a href="https://github.com/chromedp/docker-headless-shell"&gt;Chrome’s headless-shell&lt;/a&gt;
 because it&amp;rsquo;s easy to use, and it&amp;rsquo;s based on 
 
 
 
 
 &lt;a href="https://www.chromium.org/Home"&gt;Chromium&lt;/a&gt;
 . The most significant advantage is docker image, which we can efficiently run on our local machine or anywhere in the cloud.&lt;/p&gt;</description></item><item><title>Docker, GO and CGO application build</title><link>https://www.spidersoft.com.au/2021/docker-go-cgo/</link><pubDate>Fri, 23 Jul 2021 06:16:24 +0000</pubDate><guid>https://www.spidersoft.com.au/2021/docker-go-cgo/</guid><description>&lt;p&gt;I’ve been avoiding Docker for a very long time. I started as a sysadmin setting up servers running FreeBSD and early versions of Debian on bare-bone servers. As soon as “cloud” came into the market, I switched to AWS and GCE and have used them since then. EC2 was my always goto choice to deploy something on the internet quickly. But Docker — for some reason, I was avoiding it until this two years ago, when I started using it. Without too much trust.&lt;/p&gt;
&lt;p&gt;But today, history is not about my love &amp;amp; hate relationship with Docker, but about deploying the GO application and VIPS library. A couple of problems appeared during the process, and it’s worth mentioning them for future generations because I could find much help around my issues.&lt;/p&gt;</description></item></channel></rss>