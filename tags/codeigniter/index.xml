<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Codeigniter on SpiderSoft</title><link>https://www.spidersoft.com.au/tags/codeigniter/</link><description>Recent content in Codeigniter on SpiderSoft</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 25 Jul 2016 15:19:54 +0000</lastBuildDate><atom:link href="https://www.spidersoft.com.au/tags/codeigniter/index.xml" rel="self" type="application/rss+xml"/><item><title>Caddy rewrite and CodeIgniter</title><link>https://www.spidersoft.com.au/2016/caddy-rewrite-and-codeigniter/</link><pubDate>Mon, 25 Jul 2016 15:19:54 +0000</pubDate><guid>https://www.spidersoft.com.au/2016/caddy-rewrite-and-codeigniter/</guid><description>&lt;p&gt; 
 
 
 
 
 &lt;a href="https://caddyserver.com/"&gt;Caddy&lt;/a&gt;
 it‚Äôs a new kid in the block in category super light web servers. Personally ‚Äì I love it. Same love I feel to 
 
 
 
 
 &lt;a href="https://codeigniter.com/"&gt;CodeIgniter&lt;/a&gt;
 . To marge both of them, we need only basic rewrite rule to drop into caddyfile.&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;api.spidersoft.com.au {
 root /var/www/html/spidersoft.com.au
 gzip
 rewrite {
 to {path} {path}/ /index.php?/{uri}
 }
 fastcgi / /var/run/php-sock php
}
&lt;/code&gt;&lt;/pre&gt;</description></item><item><title>PhpStorm PHPCodeSniffer and‚Ä¶ CodeIgniter style guide</title><link>https://www.spidersoft.com.au/2015/phpstorm-phpcodesniffer-and-codeigniter-style-guide/</link><pubDate>Fri, 10 Jul 2015 01:26:14 +0000</pubDate><guid>https://www.spidersoft.com.au/2015/phpstorm-phpcodesniffer-and-codeigniter-style-guide/</guid><description>&lt;p&gt;This article is related to my previous one about setting up 
 
 
 &lt;a href="https://www.spidersoft.com.au/2012/codeigniter-and-php_codesniffer/" title="CodeIgniter and PHP_CodeSniffer" target="_blank" rel="noopener"&gt;PHPCodeSniffer¬†with CodeIgniter&lt;/a&gt;
 coding standards.&lt;/p&gt;
&lt;p&gt;Installation on Linux boxes is pretty yeasy:&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;sudo pear channel-update pear.php.net
yum install php-pear-PHP-CodeSniffer¬†php-phpunit-phpcpd
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;On Mac OS X you have couple options. Pear or Homebrew:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew install php-code-sniffer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And following that, on regular boxes CodeSniffer will be here:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/share/pear/PHP/CodeSniffer/Standards&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;on Mac OS CodeSniffer will be located here:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/usr/lib/php/pear/PHP/CodeSniffer/Standards&lt;/code&gt; or‚Ä¶ &lt;code&gt;/usr/local/Cellar/php-code-sniffer/1.5.6/CodeSniffer/Standards&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CodeIgniter standard can be downloaded from this location¬† 
 
 
 
 
 &lt;a href="https://github.com/thomas-ernest/CodeIgniter-for-PHP_CodeSniffer" title="https://github.com/thomas-ernest/CodeIgniter-for-PHP_CodeSniffer"&gt;https://github.com/thomas-ernest/CodeIgniter-for-PHP_CodeSniffer&lt;/a&gt;
 &lt;/p&gt;</description></item><item><title>PHPUnit and CodeIgniter 3.0</title><link>https://www.spidersoft.com.au/2015/phpunit-and-codeigniter-3-0/</link><pubDate>Thu, 02 Apr 2015 22:00:22 +0000</pubDate><guid>https://www.spidersoft.com.au/2015/phpunit-and-codeigniter-3-0/</guid><description>&lt;p&gt;Quick tutorial how to setup proper unit testing with PHPUnit and CodeIgniter 3.0.&lt;br&gt;
We need couple elements&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; 
 
 
 
 
 &lt;a href="http://www.codeigniter.com"&gt;CodeIgniter&lt;/a&gt;
 ‚Äì we are working with version¬†3.0rc3&lt;/li&gt;
&lt;li&gt; 
 
 
 
 
 &lt;a href="https://phpunit.de"&gt;PHPUnit&lt;/a&gt;
 ¬†‚Äì latest one&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you don‚Äôt have phpunit installed globally, you can go with composer, just add section to your &lt;code&gt;composer.json&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;{
 &amp;#34;require-dev&amp;#34;: {
 &amp;#34;phpunit/phpunit&amp;#34;: &amp;#34;4.1.*&amp;#34;
 }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and then&lt;br&gt;
&lt;code&gt;composer.phar install&lt;/code&gt;&lt;br&gt;
and after while we have&lt;br&gt;
&lt;code&gt;./vendor/bin/phpunit&lt;/code&gt;&lt;br&gt;
working phpunit.&lt;/p&gt;
&lt;p&gt;let‚Äôs create &lt;code&gt;phpunit.xml.dist&lt;/code&gt;&lt;/p&gt;
&lt;script src="https://gist.github.com/slav123/554d0a4ce91c8a0a68fe.js"&gt;&lt;/script&gt;

&lt;p&gt;next step will require create separate bootstrap file for PHPUnit. Just copy &lt;code&gt;cp index.php tests/Bootstrap.php&lt;/code&gt;&lt;br&gt;
We have to make 2 small amends.&lt;/p&gt;</description></item><item><title>CodeIgniter-minify update</title><link>https://www.spidersoft.com.au/2014/codeigniter-minify-update/</link><pubDate>Fri, 23 May 2014 00:05:52 +0000</pubDate><guid>https://www.spidersoft.com.au/2014/codeigniter-minify-update/</guid><description>&lt;p&gt;Just introduce some new options to my quite popular library CodeIgniter-minify. From now one you can choose CSS compression engine (cssmin || minify), also FORCE rewrite CSS files. Some speed improvements were also made.&lt;/p&gt;
&lt;p&gt;Please feel to check out library on GitGub ‚Äì 
 
 
 
 
 &lt;a href="https://github.com/slav123/CodeIgniter-minify"&gt;CodeIgniter-minify&lt;/a&gt;
 &lt;/p&gt;</description></item><item><title>CodeIgniter img update</title><link>https://www.spidersoft.com.au/2014/codeigniter-img-update/</link><pubDate>Tue, 15 Apr 2014 03:49:25 +0000</pubDate><guid>https://www.spidersoft.com.au/2014/codeigniter-img-update/</guid><description>&lt;p&gt;It‚Äôs been a while since my library 
 
 
 
 
 &lt;a href="https://github.com/slav123/CodeIgniter-Img"&gt;CodeIgniter img&lt;/a&gt;
 was updated. Purpose of this library is pretty clear ‚Äì to scale images on the fly using CodeIgniter. It‚Äôs very useful in all kinds of website and CMS-like projects. All you need to do, is just load library and inside view use it like that&lt;/p&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;$this-&amp;gt;img-&amp;gt;rimg(&amp;#39;path/to/image.jpg&amp;#39;, array(&amp;#39;width&amp;#39; =&amp;gt; 100, &amp;#39;height&amp;#39; =&amp;gt; 200, &amp;#39;alt&amp;#39;=&amp;#39;my awesome image&amp;#39;));
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;First time when script hits image, will create thumbnail. Next time, website will get already scaled image. If you need change dimensions, just change it within view ‚Äì don‚Äôt worry about recreating images.&lt;/p&gt;</description></item><item><title>CodeIgniter and PHP_CodeSniffer</title><link>https://www.spidersoft.com.au/2012/codeigniter-and-php_codesniffer/</link><pubDate>Wed, 07 Mar 2012 08:28:40 +0000</pubDate><guid>https://www.spidersoft.com.au/2012/codeigniter-and-php_codesniffer/</guid><description>&lt;p&gt; 
 
 
 
 
 &lt;a href="http://codeigniter.com/"&gt;CodeIgniter&lt;/a&gt;
 is the king üòâ But if we want to create good quality code, we should be aware about 
 
 
 
 
 &lt;a href="http://codeigniter.com/user_guide/general/styleguide.html"&gt;CodeIgniter style guide&lt;/a&gt;
 standards. What can be better than 
 
 
 
 
 &lt;a href="http://pear.php.net/package/PHP_CodeSniffer/"&gt;PHP_CodeSniffer&lt;/a&gt;
 for keeping our code¬†consistent¬†and clean as much as it possible.&lt;/p&gt;
&lt;p&gt;Unfortunately standard rules from PHP_CodeSniffer doesn‚Äôt apply for CodeIgniter. You have to install additional set of rules ‚Äì you can download them from here: 
 
 
 
 
 &lt;a href="https://github.com/thomas-ernest/CodeIgniter-for-PHP_CodeSniffer"&gt;PHP_CodeSniffer rules for CI&lt;/a&gt;
 .&lt;/p&gt;</description></item><item><title>CodeIgniter IMG ‚Äì thumbnails on the fly</title><link>https://www.spidersoft.com.au/2011/codeigniter-img-thumbnails-on-the-fly/</link><pubDate>Sun, 03 Jul 2011 20:19:57 +0000</pubDate><guid>https://www.spidersoft.com.au/2011/codeigniter-img-thumbnails-on-the-fly/</guid><description>&lt;p&gt;CodeIgniter library to generate high quality thumbnails&lt;/p&gt;
&lt;p&gt;Library is based on excellent * Smarty plugin ‚ÄúThumb‚Äù * created in 2005 by Christoph Erdmann. This¬†version is a little different, we are using core from Thumb, and some modification which¬†gives more flexibility to work with it.&lt;/p&gt;
&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;thumbnails are generated ‚Äúon the fly‚Äù no additional actions required,&lt;/li&gt;
&lt;li&gt;cache for generated thumbnails,&lt;/li&gt;
&lt;li&gt;clear structure for generated thumbnails,&lt;/li&gt;
&lt;li&gt;thumbnails sharpening function,&lt;/li&gt;
&lt;li&gt;cropping function,&lt;/li&gt;
&lt;li&gt;fill space function&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;
&lt;p&gt;You need to upload file &lt;code&gt;img.php&lt;/code&gt; into directory &lt;code&gt;application/libraries&lt;/code&gt;. In controller, you need to load library:&lt;/p&gt;</description></item></channel></rss>